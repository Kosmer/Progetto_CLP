//TYPECHECKING

int a; int b; int c ; c = 2 ;
     if (c > 1) { b = c ; } else { a = b ; }
   } // ERRORE perche` b e` usata ma non inizializzata
   
 
========================================= 
   
 int a; int b; int c ;
     void f(int n){ 
	  int x ; int y ;
          if (n > 0) { x = n ;} else { y = n+x ;}
     }
     c = 1 ; f(0) ;  // ERRORE perche` x e` usata ma non inizializzata (ramo else)

=========================================

void h(int n){ 
  	  int x ; int y ;
          if (n==0){ x = n+1 ;} else { h(n-1) ; x = n ; y = x ;} 
     }
     h(5) ;  // CORRETTA
     
=========================================     
     
     
int a; 
     void h(int n){ 
  	  int x ; int y ;
          if (n==0){ x = n+1 ;} else { h(n-1) ; y = x ;} 
     }
     h(5) ;  // ERRORE
     
=========================================    
     
         
//CODEGEN (disattivare typechecking per bypassarlo)



int x ;
void f(int n){ 
	if (n == 0) { n = 0 ; }       // n e` gia` uguale a 0; equivale a fare skip
	else { x = x * n ; f(n-1) ; }	
}
x = 1 ;
f(10) 
=========================================

int u ;
int f(int n){ 
        int y ;
	y = 1 ;
	if (n == 0) { y }
	else { y = f(n-1) ; y*n }	
}
u = 6 ;
f(u) 

=========================================
int u ;
void f(int m, int n){
	int x ;
	if (m>n) { u = m+n ;}
	else {  x = 1 ; f(m+1,n+1) ; }
}
f(5,4) ; u

=========================================

int u ;
void f(int m, int n){
	int x ;
	if (m>n) { u = m+n ;}
	else {  x = 1 ; f(m+1,n+1) ; }
}
f(4,5) ; u
